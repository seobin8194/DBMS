DBMS(DataBase Management System)
데이터베이스 관리해주는 소프트웨어
https://db-engines.com/en/ranking
1위 오라클 : 고가라서 국가 사이트나 대기업에서 이용. 실시간으로 사람이 많이 들어오는 사이트
2위 mySQL : 상용적으로 사용시 부분 유료. 중소기업에서 많이 사용
그 외 mariaDB: MYSQL와 거의 유사, 무료
        postgreSQL
        Microsoft SQL Server: window사용시 

* mySQL 설치
https://dev.mysql.com/downloads/
1. mysql community server 선택 
2. Windows(x86, 32 & 64 bit), MySQL Installer MSI 선택
3. Windows (x86, 32-bit), MSI Installer	8.0.23	422.4M	
설치 후 검색 -> 서비스에서 mySQL서비스 시작하기
4. mysql 포트번호 3306 기억하기
5. Use Legacy Authentication Method 체크하기
6. Root Account Password 설정 : 1234

실제 개발할때는 서버와 클라이언트 따로 설치
실제 개발할때는 서비스하는 mysql서버가 있고 작업하는 컴퓨터에 mysql클라이언트를 설치하여 서버에 접속하면서 작업
연습용은 내 컴퓨터가 서버고 클라이언트이므로 다 설치
서버(웹 서버, 데이터베이스 서버)    <->    클라이언트 도구(workbench, 데이터베이스 서버와 원격으로 통신)

데이터베이스
저장소, 데이터를 통합해서 관리하는 집합체를 의미
사이트 혹은 앱 하나당 데이터 베이스 하나

데이터베이스안에는
- 테이블
  data저장, 엑셀과 비슷
  열 : 컬럼 필드 어트리뷰트
  행 : 로우 레코드
- 함수
- 저장프로시저
- 뷰
- 사용자

테이블
데이터를 행과 열로 스크마에 따라 저장할 수 있는 구조
* 스키마
데이터베이스의 구조와 제약조건에 관한 명세를 기술한 집합을 의미

테이블 만들기
CREATE TABLE 테이블명(
      필드이름1 타입 제약조건,
      필드이름2 타입 제약조건,
      ...
)

데이터타입
- 숫자타입
  정수 : tinyint, smallint, mediumint, int, bigint -> 정수는 int만 쓰면됨. 속도가 제일 빠름. 용량크면 bigint
  소수 : float, double -> 소수는 double만 쓰면됨
- 문자열타입
  텍스트 : char, varchar, text
  char(5) -> 5바이트까지 저장가능. 1바이트만 저장하더라도 5바이트 모두 사용
  varchar(5) -> 5바이트까지 저장가능. 1바이트 저장하면 1바이트만 사용. 65535바이트까지 저장가능. 이거 사용권장
  text -> varchar()보다 더 많은 글자를 저장해야 할때, 무한으로 들어간다
- 바이너리
  바이너리 : binary, varbinary
  사운드, 사진, 동영상 저장시 (글자가 아닌거)
  데이터베이스는 이런 형태는 잘 저장하지 않는다
  사이트의 이미지나 영상은 파일로 저장하고 경로만 데이터베이스에 저장한다
  단 같은 이미지인지 혹은 같은 영상인지 비교할때 (예 네이버 음악검색)과 같은 서비스를 할때 이미지나 영상을 데이터베이스에 저장
  => dbms의 비용을 줄이기 위해 바이너리를 저장하지 않은 것
       마치 비싼 cpu의 cache에 데이터를 다 저장하지 않고 ram저장소를 이용하는것과 비슷
- 열거형
  열거형 : enum
  enum('남자', '여자') -> 해당 필드에 이 데이터만 저장할 수 있다
- 날짜와 시간
  날짜 : date
  날짜와 시간 : datetime, timestamp(1970년.. 이후 흐른 시간 저장)
  예 멜론사이트에서 정액제 만료일 계산과 같은 날짜 계산을 편하게 하기 위해 존재

제약조건
데이터의 무결성을 지키기 위해 데이터를 입력받을때 실행하는 검사규칙
RDBMS는 테이블끼리 관계를 갖는것을 말하는데 RDBMS에서 무결성이 중요하다
* 무결성
데이터베이스에 잘못된 정보가 들어가면 안된다
카카오톡이 성공할 수 있는 이유는 사용자들의 정보가 기업 가치를 상승시켰다
그만큼 명확한 데이터는 가치있고 돈이 된다
- NOT NULL
  필드에 NULL 값을 넣을 수 없다
- UNIQUE
  중복된 값을 저장할 수 없다. 단, NULL값은 허용
- DEFAULT
  기본값 설정(NULL값이 저장될때)
- AUTO_INCREMENT
  자동으로 숫자가 증가되어 추가. 직접 데이터를 추가할 수 없다
  PRIMARY KEY를 적용해야함(MySQL에서만)
  행을 구별하기 위함
  -> 번호   데이터
         1      A            -> 1번 빼고 4~8번 석제할때 구별 할 수 있는게 필요 -> 이때 사용
         2                         4~8번 삭제 후 다시 데이터를 넣으면 9번부터 시작
         3      
         4      A
         5      A
         6      A
         7      A
         8      A
- PRIMARY KEY
  AUTO_INCREMENT 제약조건을 걸면 반드시 PRIMARY KEY여야 한다(mySQL에서만)
  UNIQUE와 NOT NULL 제약 특징을 모두 가진다
  테이블의 오직 하나의 필드에만 설정가능
  데이터를 쉽고 빠르게 찾을 수 있게 도와준다(색인)
  -> SELECT는 많은 데이터를 조회 후 찾는 명령이여서 속도가 느린 키워드 -> 이 키워드의 속도를 높이는 기능 -> 색인
      SELECT mem_id FROM tb_member WHERE id = 'apple' and pw = '1234' -> 조건절에 많이 사용하는 컬럼에 색인을 걸면 그 색인이 포함된 sql명령의 속도가 빨라진다
  외래키가 참조할 수 있다
  -> 두 테이블의 관계를 만들어 다른 테이블에서 특정 테이블의 데이터를 넣고 싶을때
- FOREIGN KEY
  다른 테이블과 연결해주는 역할
  기준이되는 테이블의 내용을 참조해서 레코드가 입력됨 -> 기준 테이블에 존재하는 데이터만 저장가능
  다른 테이블에 의존하는 필드가 됨
  PRIMARY KEY를 참조. 

SQL(Structured Query Language)
데이터베이스에서 데이터를 정의하거나 조작 및 제어하는 언어
RDBMS에 저장된 데이터와 통신하기 위해 필요한 프로그래밍 언어
시퀄이라고도 부름

SQL문법
대소문자를 구별하지 않는다. 대문자를 권한다(다른 언어가 대부분 소문자이기때문에 구별하기 위해)
문장의 끝에 ; PHP에서 SQL문 섞을때는 ;를 쓰지 않는다
문자열을 저장할때 ' '만 사용
-> sql = "SELECT * FROM tb_member where mem_id = "apple"" : php와 섞어 쓸때 "가 중복된다
    sql = "SELECT * FROM tb_member where mem_id = 'apple'"
스네이크표기법 사용
테이블명은 tb_를 앞에 많이 붙인다
필드명은 다른 테이블 필드명과 충돌나지 않게 하기위해 "테이블명_필드명" 으로 쓴다