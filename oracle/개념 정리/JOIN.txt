JOIN 
여러 테이블에 흩어져 있는 정보 중 사용자가 필요한 정보만 가져와서 가상의 테이블(카티션 곱)처럼 만들고 결과를 보여주는 것

기준 테이블에 조건을 만족하는 다른 테이블의 행(한 사람의 정보)을 붙이는 것
->기준 테이블의 셀과 일치하는 셀을 가진 두번째 테이블의 해당 행을 기준 테이블에 붙인다
테이블들을 조인해서 붙여 놓은 테이블에서 같은 행의 데이터를 가지고 조인조건을 만족하면 된다

두 테이블 각각에 존재하는 데이터 각각의 데이터로 조인 조건을 검사하므로 주로 테이블이 공유하는 데이터(외래키)로 조인을 한다

조회 테이블이 너무 많이 쪼개져 있으면 느리기 때문에 입력 수정 삭제의 성능을 향상시키기 위해 사용
-> 여러 테이블에 흩어져 있으면 데이터를 가져올때 각 테이블에서 각각 조회해야한다

INNER JOIN(내부 조인)
조건이 일치하는 값이 두 테이블에 모두 존재할때 조회
FROM 테이블1 INNER JOIN 테이블2 ON 조건식
-> INNER 키워드는 생략 가능

    ON절에 등호가 있으면 등가조인  ON절에 등호가 없으면 비등가조인
    ON절의 조건은 JOIN되면서 실행되고 WHERE절의 조건은 JOIN이 모두 끝나고 실행
    ON절과 WHERE을 같이 사용할때와 ON절만 사용할때 결과가 같다면 ON절만 사용하는것이 좋다
   
    JOIN은 FROM절에 포함된다고 생각하기


OUTER JOIN(외부 조인)
두개의 테이블 중 조건이 거짓이라도 한쪽 테이블의 모든 정보가 검색되어야 할때 이용
조인에서 제외된 NULL 행을 외부조인을 통해 포함시키고 싶으면 NULL처리를 해야한다
-> 조인할만한 행이 없기 때문에
FROM 테이블1 LEFT(RIGHT) OUTER JOIN 테이블2 ON 조인조건
-> LEFT(RIGHT) : 다 붙일 테이블 지정
    FULL : 두 테이블의 모든 정보를 가져와 조인한다


NATURAL JOIN (내츄럴 조인)
중복되는 컬럼(연결된 컬럼)이 있을시 그 컬럼을 기준으로 조인해준다
FROM 테이블1 NATURAL JOIN 테이블2
USING 
중복 컬럼을 기준으로 조인
중복 컬럼의 이름과 타입이 모두 같아야한다
FROM 테이블1 JOIN 테이블2 USING 중복컬럼

둘다 출력시 기준된 컬럼을 맨 앞으로 이동하고 하나만 출력


CROSS JOIN 
단순 곱
거의 쓰지 않는다
목적은 모든 상황의 모든 경우를 고려할때 이용
FROM 테이블1 CROSS JOIN 테이블2
(오라클 방식으로 이너 조인하는게 크로스 조인후 걸러내는 것)


셀프 조인
테이블 하나를 두번 참조할때 사용


조인 수행원리 
1. NESTED JOIN
가장 기본적인 조인
먼저 읽은 테이브의 행 수만큼 JOIN을 수행
선행 테이블(DRIVING TABLE)이 JOIN의 성능을 결정한다
후행 테아블(DRIVEN TABLE)은 나중에 읽은 테이블을 의미한다
2. SORT-MERGER JOIN
검색과 조건 비교전에 WHERE 조건을 기준으로 정렬한다
정렬할때 시간이 먀우 오래걸리지만 인덱스가 존재하지 않을때는 빨리 해당 데이터를 찾아서 결과를 출룍할 수 있다
3. HASH-JOIN
인덱스가 있기 때문에 SORT-MERGER JOIN보다 2배 이상 빠른 속도로 검색이 가능하다




