--SELECT문 연습
SELECT * FROM PLAYER;
--PLAYER 테이블에서 TEAM_ID가 KO1이 아닌 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID != 'K01';
--PLAYER 테이블에서 몸무게가 70이상이고 80이하인 선수 검색
SELECT * FROM PLAYER WHERE WEIGHT >= 70 AND WEIGHT <= 80;
--PLAYER 테이블에서 TEAM-ID가 KO3이고 키가 180미만인 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID = 'K03' AND HEIGHT < 180;
--PLATER 태이블에서 TEAM_ID가 K06이고 NICKNAME이 제리인 선수 검색
SELECT * FROM PLAYER WHERE TEAM_ID = 'K06' AND NICKNAME = '제리';
--키가 170이상이고 WEIGHT가 80이상인 선수 이름 검색
 SELECT PLAYER_NAME FROM PLAYER WHERE HEIGHT >= 170 AND WEIGHT >= 80;
--1987년 이후 출생한 TEAM_ID가 K06인 선수 검색
SELECT * FROM PLAYER WHERE BIRTH_DATE > TO_DATE('1987','yyyy') AND TEAM_ID = 'K06';
--TEAM_ID가 K05이고 JOIN_YYYY가 2011이나 2012인 선수 검색
--AND연산자가 OR연산자보다 먼저 연산된다
SELECT * FROM PLAYER WHERE TEAM_ID = 'K05' AND (JOIN_YYYY = '2011' OR JOIN_YYYY = '2012');
SELECT *FROM PLAYER WHERE TEAM_ID = 'K05' AND (JOIN_YYYY IN ('2011','2012'));

--INSERT 연습
--부모 테이블 먼저 데이터 삽입해야한다
INSERT INTO MAJOR(MAJORNUM, MAJORNAME, MAJORCOLLEGE) VALUES ('1','컴공','과기대');
INSERT INTO STUDENT(STUPHONE, STUJUMIN, STUGRADE, STUADDR, MAJORNAME, STUPW, STUID, STUNAME) 
VALUES('01054038194','9811011234567',4,'경기도','컴공','1234','b789058','서빈');
INSERT INTO PROFESSOR(PROPHONE,PROPAY,PRONAME,PROID,PROADDR, MAJORNAME)
VALUES ('01012345678',1000,'영철','A789058','서울','컴공');
INSERT INTO SUBJECT(SUBNAME,SUBID,PROID,MAJORNAME) VALUES ('종설','1107','A789058','컴공');
INSERT INTO LECTURE(LISTSEQ,STUID,SUBID) VALUES (1,'b789058','1107');

--UPDATE문 연습
--수정할때 FK의 경우 부모 테이블에 존재하지 않은 값으로 수정할 수 없다
--UPDATE LECTURE SET STUID = 'B789063' WHERE SUBID = '1107';
UPDATE STUDENT SET STUPW = '5678' WHERE STUID = 'b789058';
--PLAYER 테이블에서 TEAM_ID가 K01인 선수 이름을 내 이름으로 바꾸기
UPDATE PLAYER SET PLAYER_NAME = '정서빈' WHERE TEAM_ID = 'K01';
--player 테이블에서 닉네임이 비어있는 선수를 dbms로 닉네임 바꾸기
--IS (NOT)NULL : 컬럼의 값이 NULL로 비어있다면 참 / NULL이 아니면 참
UPDATE PLAYER SET NICKNAME = 'dbms' WHERE NICKNAME IS NULL;
--player 테이블에서 position이 df이고 team_id가 k04인 선수 국적을 한국으로 바꾸기
UPDATE PLAYER SET NATION = 'KOREA' WHERE POSITION = 'df' AND TEAM_ID = 'K04';
--player 테이블에서 1985년생 선수 중 tem_id가 k01이고 position이 mf인 선수 nickname dbms2로 바꾸기
--UPDATE PLAYER SET NICKNAME = 'DBMS2' WHERE TEAM_ID = 'K01' AND BIRTH_DATE = TO_DATE('1985','yyyy');
--DATE는 그 순간이므로 1985년생인 사람을 찾으려면 범위로 조건을 걸어줘야한다
UPDATE PLAYER 
SET NICKNAME = 'DBMS2' 
WHERE TEAM_ID = 'K01' AND POSITION = 'MF' 
AND BIRTH_DATE >= TO_DATE('1985-01-01 00:00:00','yyyy-MM-dd HH24-MI-ss') AND BIRTH_DATE <= TO_DATE('1985-12-31 23:59:59','yyyy-MM-dd HH24-mi-SS');

--DELETE 연습
--삭제할때는 자식 테이블 먼저 삭제한다
--lecture 테이블에서 seq가 정원을 초과한 경우 초과된 학생을 삭제
DELETE FROM LECTURE WHERE SUBID = '1107' AND LISTSEQ > 30; 
--PLAYER 테이블에서 POSITION이 MF인 선수삭제하기
DELETE FROM PLAYER WHERE POSITION = 'MF';
--PLAYER 테이블에서 키가 180이상인 선수 삭제
DELETE FROM PLAYER WHERE HEIGHT >= 180;

--컬럼에 별칭 주기
--별칭에 띄어쓰기가 있는 경우 ' '로 묶어주기
SELECT PLAYER_NAME AS NAME, NICKNAME AS 별명 FROM PLAYER; 

--테이블에 별칭 주기
--두 테이블에서 한꺼번에 데이터를 가져올때 컬럼이 어느 테이블에 속해있는지 명시해줘야 하는데 이때 별칭을 이용한다
--곱하기되서 나온다 -> NAME하나당 모든 주소가 매치되서 나온다
SELECT P.PLAYER_NAME, T.ADDRESS FROM PLAYER P, TEAM T;

